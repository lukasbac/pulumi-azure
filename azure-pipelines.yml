# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  azureContainerRegistry: registry-sc
  azureSubscriptionEndpoint: container

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: npm install dockercompose
- script: dockercompose --help
    
#- task: DockerCompose@0
#  displayName: Container registry login
#  inputs:
#    containerregistrytype: Azure Container Registry
#    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
#    azureContainerRegistry: $(azureContainerRegistry)
- task: DockerCompose@0
  displayName: Container registry login
  inputs:
    containerregistrytype: Azure Container Registry
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
   # dockerComposeCommand: Login
- task: DockerCompose@0
  displayName: Build services
  inputs:
    action: Build services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker-compose.yml
    projectName: kong2
    qualifyImageNames: true
    additionalImageTags: abc

- task: DockerCompose@0
  displayName: Push services
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker-compose.yml
    projectName: kong2
    qualifyImageNames: true
    additionalImageTags: abc


- task: DockerCompose@0
  displayName: PS
  inputs:
    dockerComposeCommand: ps


- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
